filter(str_detect(description, "Household", "Brazil"))
library(stringr)
dadosbetsEN %>%
filter(str_detect(description, "Household", "Japan"))
library(stringr)
dadosbetsEN %>%
filter(str_detect(description, "Household" | "Japan"))
library(stringr)
dadosbetsEN %>%
filter(str_detect(description, "Household"))
?str_detect
autoplot(gas)
autoplot(gold)
?monthplot
autoplot(cbind(gas,gold), facets=TRUE)
str(gas)
gas
str(gold)
str(gold)gold
gold
autoplot(cbind(gas,taylor), facets=TRUE)
taylor
gas
str(gas)
str(taylor)
str(gold)
str(wineind)
AirPassengers
str(AirPassengers)
summary(AirPassengers)
class(AirPassengers)
USAccDeaths %>%
tbats() %>%
forecast() %>%
autoplot()
USAccDeaths %>%
stl(s.window='periodic') %>%
forecast() %>%
autoplot()
USAccDeaths
?USAccDeaths
autoplot(cbind(gas,USAccDeaths), facets=TRUE)
gas
USAccDeaths
autoplot(cbind(window(gas, start=c(1973,1), end=c(1978,12)),USAccDeaths), facets=TRUE)
autoplot(cbind(window(gas, start=c(1973,1), end=c(1978,12)),USAccDeaths), facets=TRUE)
?window
window(gas, start=c(1973,1), end=c(1978,12))
plot(window(gas, start=c(1973,1), end=c(1978,12)))
gas1=window(gas, start=c(1973,1), end=c(1978,12))
autoplot(cbind(gas1,USAccDeaths), facets=TRUE)
autoplot(cbind(gas1,USAccDeaths), facets=TRUE)
autoplot(cbind(gas1,USAccDeaths), facets=TRUE,ylab = "")
autoplot(cbind(gas1,USAccDeaths), facets=TRUE,ylab = "")
gold
wineind
ArgentinaCPI
library(AER)
ArgentinaCPI
ArgentinaCPI
library(AER)
ArgentinaCPI
Affairs
plot(Affairs)
DATA(Affairs)
data(Affairs)
Affairs
ArgentinaCPI
data(ArgentinaCPI)
ArgentinaCPI
ConsumerGood
data(ConsumerGood)
ConsumerGood
AirPassengers
Nile
?decompose
dados = c(100,200,300,500,300,350,100,150,100,300,350,100)
serie = ts(dados, start = (2018,1), end=(2018,12))
serie = ts(dados, start = c(2018,1), end=c(2018,12), frequency = 12)
dados = c(100,200,300,500,300,350,100,150,100,300,350,100)
serie = ts(dados, start = c(2018,1), end=c(2018,12), frequency = 12)
serie
plot(serie)
autoplot(serie)
autoplot(serie, main = "Série temporal")
autoplot(serie, main = "Série temporal criada")
dados = c(100,200,300,500,300,350,100,150,100,300,350,100)
serie = ts(dados, start = c(2018,1), end=c(2018,12), frequency = 12)
serie
class(serie)
par(mfrow=c(2,2))
autoplot(gas)
autoplot(gold)
autoplot(taylor)
autoplot(wineind)
library(BETS)
library(forecast)
#autoplot(BETSget())
#gas1=window(gas, start=c(1973,1), end=c(1978,12))
#autoplot(cbind(gas1,USAccDeaths), facets=TRUE,ylab = "")
par(mfrow=c(2,2))
autoplot(gas)
autoplot(gold)
autoplot(taylor)
autoplot(wineind)
library(BETS)
library(forecast)
#autoplot(BETSget())
#gas1=window(gas, start=c(1973,1), end=c(1978,12))
#autoplot(cbind(gas1,USAccDeaths), facets=TRUE,ylab = "")
par(mfrow=c(2,2))
plot(gas)
plot(gold)
plot(taylor)
plot(wineind)
library(BETS)
library(forecast)
#autoplot(BETSget())
#gas1=window(gas, start=c(1973,1), end=c(1978,12))
#autoplot(cbind(gas1,USAccDeaths), facets=TRUE,ylab = "")
par(mfrow=c(2,2))
plot(gas)
plot(gold)
plot(USAccDeaths)
plot(wineind)
library(BETS)
library(forecast)
#autoplot(BETSget())
#gas1=window(gas, start=c(1973,1), end=c(1978,12))
#autoplot(cbind(gas1,USAccDeaths), facets=TRUE,ylab = "")
par(mfrow=c(2,2))
plot(gas)
plot(gold)
plot(USAccDeaths)
plot(AirPassengers)
library(BETS)
library(forecast)
#autoplot(BETSget())
#gas1=window(gas, start=c(1973,1), end=c(1978,12))
#autoplot(cbind(gas1,USAccDeaths), facets=TRUE,ylab = "")
par(mfrow=c(2,2))
plot(gas, main="x")
plot(gold)
plot(USAccDeaths)
plot(AirPassengers)
?gas
?gold
?USAccDeaths
?AirPassengers
library(BETS)
library(forecast)
#autoplot(BETSget())
#gas1=window(gas, start=c(1973,1), end=c(1978,12))
#autoplot(cbind(gas1,USAccDeaths), facets=TRUE,ylab = "")
par(mfrow=c(2,2))
plot(gas, main="Australian monthly gas production")
plot(gold, main="Daily morning gold prices")
plot(USAccDeaths, main="Accidental Deaths in the US 1973–1978")
plot(AirPassengers,main="Monthly Airline Passenger Numbers 1949-1960")
library(BETS)
library(forecast)
#autoplot(BETSget())
#gas1=window(gas, start=c(1973,1), end=c(1978,12))
#autoplot(cbind(gas1,USAccDeaths), facets=TRUE,ylab = "")
par(mfrow=c(2,2))
plot(gas, main="Australian monthly gas production")
plot(gold, main="Daily morning gold prices")
plot(USAccDeaths, main="Accidental Deaths in the US 1973–1978")
plot(AirPassengers,main="Monthly Airline Passenger 1949-1960")
UCBAdmissions
airmiles
library(BETS)
library(forecast)
#autoplot(BETSget())
#gas1=window(gas, start=c(1973,1), end=c(1978,12))
#autoplot(cbind(gas1,USAccDeaths), facets=TRUE,ylab = "")
par(mfrow=c(2,2))
plot(gas, main="Australian monthly gas production")
plot(gold, main="Daily morning gold prices")
plot(USAccDeaths, main="Accidental Deaths in the US 1973–1978")
plot(airmiles,main="Monthly Airline Passenger 1949-1960")
?airmiles
library(BETS)
library(forecast)
#autoplot(BETSget())
#gas1=window(gas, start=c(1973,1), end=c(1978,12))
#autoplot(cbind(gas1,USAccDeaths), facets=TRUE,ylab = "")
par(mfrow=c(2,2))
plot(gas, main="Australian monthly gas production")
plot(gold, main="Daily morning gold prices")
plot(USAccDeaths, main="Accidental Deaths in the US 1973–1978")
plot(airmiles,main="Passenger Miles on Commercial US Airlines, 1937–1960")
library(BETS)
library(forecast)
#autoplot(BETSget())
#gas1=window(gas, start=c(1973,1), end=c(1978,12))
#autoplot(cbind(gas1,USAccDeaths), facets=TRUE,ylab = "")
par(mfrow=c(2,2))
plot(gas, main="Australian monthly gas production")
plot(gold, main="Daily morning gold prices")
plot(USAccDeaths, main="Accidental Deaths in the US 1973–1978")
plot(airmiles,main="Passenger Miles on Com. US Airlines, 1937–1960")
library(BETS)
library(forecast)
#autoplot(BETSget())
#gas1=window(gas, start=c(1973,1), end=c(1978,12))
#autoplot(cbind(gas1,USAccDeaths), facets=TRUE,ylab = "")
par(mfrow=c(2,2))
plot(gas, main="Australian monthly gas production")
plot(gold, main="Daily morning gold prices")
plot(USAccDeaths, main="Accidental Deaths in the US")
plot(airmiles,main="Passenger Miles on Com. US Airlines")
BankWages
plot(data(BankWages))
autoplot(data(BankWages))
autoplot(data(ChinaIncome))
plot(data(ChinaIncome))
autoplot(data(Fatalities))
plot(data(Fatalities))
autoplot(data(GSOEP9402))
autoplot(data(GSS7402))
autoplot(data(HousePrices))
data(HousePrices)
HousePrices
autoplot(data(USConsump1950))
data(USConsump1950)
USConsump1950
autoplot(USConsump1950)
autoplot(USConsump1950[1:2])
autoplot(USConsump1950[1:2,])
plot(USConsump1950)
autoplot(data(USInvest))
data(USInvest)
USInvest
plot(USInvest)
autoplot(USInvest)
cor(USInvest)
corplot(USInvest)
cor(USInvest)
cor?
?cor
cor.test(USInvest)
sd(USInvest)
cor.wt(USInvest)
data(USMacroSWQ)
USMacroSWQ
plot(USMacroSWQ)
data(USMacroB)
USMacroB
plot(USMacroB)
data(USMacroSWM)
plot(USMacroSWM)
cor(USMacroSWM)
class(USMacroSWM)
data(TravelMode)
plot(TravelMode)
TravelMode
install.packages(rggobi)
install.packages("rggobi")
library(rggobi)
g <- ggobi(titanic)
library(rggobi)
end(serie)
lag(serie)
lag(serie, -12)
serie/lag(serie, -12)-1*100
serie/lag(serie, -12)-1
varserie=(serie/lag(serie, -12)-1)*100
varserie=(serie/lag(serie, -1)-1)*100
varserie=(serie/lag(serie, -2)-1)*100
varserie=(serie/lag(serie, -2)-3)*100
varserie=(USAccDeaths/lag(USAccDeaths, -12)-1)*100
class(USAccDeaths)
varserie=(USAccDeaths/lag(USAccDeaths, 12)-1)*100
lag(USAccDeaths)
lag(USAccDeaths, 12)
stats::lag(USAccDeaths, 12)
varserie=(serie/stats::lag(serie, -2)-3)*100
varserie
varserie=(serie/stats::lag(serie, -12)-3)*100
varserie
varserie=(serie/stats::lag(serie, -1)-3)*100
varserie
varserie=(serie/stats::lag(serie, -12)-3)*100
varserie=(serie/stats::lag(serie, 12)-3)*100
varserie=(serie/stats::lag(serie, 12)-1)*100
varserie=(serie/stats::lag(serie, -12)-1)*100
stats::lag(serie, -12)
stats::lag(serie, -12)
serie/stats::lag(serie, -12)
serie/(stats::lag(serie, -12))
serie/(stats::lag(serie, 12))
(stats::lag(serie, 12))
lag(ldeaths, 12)
library(tidyverse)
lag <- stats::lag
lag(ldeaths, 12)
(stats::lag(serie, 12))
serie/(stats::lag(serie, 12))
serie/(stats::lag(serie, -12))
varserie=serie/(stats::lag(serie, -12))
varserie
varserie=serie/(stats::lag(serie, -12)-1)
varserie=serie/(stats::lag(serie, -12)-1)*100
library(quantmod)
library(xts)
library(sidrar)
library(forecast)
library(ggplot2)
library(scales)
library(astsa)
library(vars)
library(aod)
# IBOVESPA
env = new.env()
getSymbols('^BVSP', src='yahoo',
env=env,
from=as.Date('2001-01-01'))
install.packages("astsa")
install.packages("vars")
install.packages("aod")
library(quantmod)
library(xts)
library(sidrar)
library(forecast)
library(ggplot2)
library(scales)
library(astsa)
library(vars)
library(aod)
# IBOVESPA
env = new.env()
getSymbols('^BVSP', src='yahoo',
env=env,
from=as.Date('2001-01-01'))
# FBCF
fbcf = get_sidra(api='/t/1620/n1/all/v/all/p/all/c11255/93406/d/v583%202')
fbcf
## Ibovespa
ibovespa = env$BVSP$BVSP.Close
sapply(ibovespa, function(x) sum(is.na(x)))
ibovespa = ibovespa[complete.cases(ibovespa)]
ibovespa = apply.quarterly(ibovespa, FUN=mean)
ibovespa = ts(ibovespa, start=c(2001,01), freq=4)
## FBCF
fbcf = ts(fbcf$Valor, start=c(1996,01), freq=4)
dfbcf = (fbcf/lag(fbcf,-4)-1)*100
varserie = (serie/lag(serie,-12)-1)*100
varserie
class(fbcf)
dfbcf
fbcf
serie
varserie = (serie/lag(serie,-1)-1)*100
varserie
lag(serie,-1)
serie
lag(serie,-1)-1
serie/lag(serie,-1)
serie/lag(serie,-1)-1
serie-lag(serie,-1)
varserie = (serie/lag(serie,-1)-1)*100
varserie
autoplot(varserie)
dat.konstantopoulos2011
library(metafor)
install.packages("dosresmeta")
library("dosresmeta", lib.loc="~/R/win-library/3.5")
data("cc_ex")
cc_ex
mod1 <- dosresmeta(formula = logrr ~ dose, type = "cc", cases = case,
n = n, lb = lb, ub = ub, data= cc_ex)
summary(mod1)
predict(mod1, delta = 1, expo = TRUE)
data("ari")
mod3 <- dosresmeta(formula = y ~ dose + I(dose^2), id = id,
sd = sd, n = n, covariance = "smd", data = ari)
summary(mod3)
ari
newdata <- data.frame(dose = seq(0, 30, 1))
with(predict(mod3, newdata, order = TRUE), {
plot(dose, pred, type = "l",
ylim = c(0, .6))
lines(dose,  ci.lb, lty = 2)
lines(dose, ci.ub, lty = 2)
rug(dose, quiet = TRUE)
})
data("cc_ex")
## Fitting the model
mod1 <- dosresmeta(formula = logrr ~ dose, type = "cc", cases = case,
n = n, lb = lb, ub = ub, data= cc_ex)
summary(mod1)
## Results
predict(mod1, delta = 1, expo = TRUE)
cc_ex
require(readr)
chd <- read_delim("https://github.com/Smolski/livroavancado/raw/master/cdh.csv",
";", escape_double = FALSE, col_types = cols(CHD = col_factor(levels = c())),
trim_ws = TRUE)
library(shiny); runApp('D:/Educ/Cursos/Shiny/appteste3.R')
runApp('D:/Educ/Cursos/Shiny/censo.R')
runApp('D:/Educ/Cursos/Shiny/censomapa.R')
runApp('D:/Educ/Cursos/Shiny/wordcloud.R')
runApp('D:/Educ/Cursos/Shiny/stockVis')
View(swissmunicipalities)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
df <- read_delim("d:/Users/Felipe/Desktop/Crime_Componentes_Princ/crime.csv",
";", escape_double = FALSE, locale = locale(encoding = "ASCII"),
trim_ws = TRUE)
library(readr)
df <- read_delim("d:/Users/Felipe/Desktop/Crime_Componentes_Princ/crime.csv",
";", escape_double = FALSE, locale = locale(encoding = "ASCII"),
trim_ws = TRUE)
View(df)
row.names(df)=df$Municipios
row.names(df)=df$Municípios
row.names(df)=df$Municmpios
df=df[2:77]
library("factoextra")
library("factoextra")
library("FactoMineR")
library(corrplot)
library("FactoMineR")
library(corrplot)
correl=cor(df[3:15])
corrplot(correl, method="circle")
res.pca <- PCA(scale(df[3:15]),  graph = FALSE)
get_eig(res.pca)
fviz_screeplot(res.pca, addlabels = TRUE, ylim = c(0, 50))
fviz_screeplot(res.pca, addlabels = TRUE, ylim = c(0, 50))
var <- get_pca_var(res.pca)
var <- get_pca_var(res.pca)
var
fviz_pca_var(res.pca, col.var = "black")
fviz_pca_var(res.pca, col.var = "black")
str(crime)
summary(crime)
View(crime)
View(df)
str(df)
res.pca <- PCA(scale(df[3:77]),  graph = FALSE)
get_eig(res.pca)
fviz_screeplot(res.pca, addlabels = TRUE, ylim = c(0, 50))
var <- get_pca_var(res.pca)
var
var$coord
var$coord
var$contrib
var$contrib
fviz_pca_var(res.pca, col.var = "black")
fviz_pca_var(res.pca, col.var = "black")
View(df)
res.pca <- PCA(scale(df[3:102]),  graph = FALSE)
df <- read_delim("d:/Users/Felipe/Desktop/Crime_Componentes_Princ/crime.csv",
";", escape_double = FALSE, locale = locale(encoding = "ASCII"),
trim_ws = TRUE)
df1=df[2:102]
View(df)
summary(df)
table(is.na(df))
df1=df[4:50]
library("factoextra")
library("factoextra")
library("FactoMineR")
library(corrplot)
row.names(df1)=df$Municmpios
correl=cor(df[3:15])
corrplot(correl, method="circle")
corrplot(correl, method="circle")
str(df1)
correl=cor(df1)
corrplot(correl, method="circle")
corrplot(correl, method="circle")
res.pca <- PCA(scale(df1),  graph = FALSE)
get_eig(res.pca)
fviz_screeplot(res.pca, addlabels = TRUE, ylim = c(0, 50))
var <- get_pca_var(res.pca)
var <- get_pca_var(res.pca)
var
var$coord
var$coord
var$contrib
var$coord
var$contrib
fviz_pca_var(res.pca, col.var = "black")
fviz_pca_var(res.pca, col.var = "black")
fviz_pca_var(res.pca, col.var="contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
)
)
fviz_pca_var(res.pca, col.var="contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
)
fviz_pca_var(res.pca, col.var="contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE # Avoid text overlapping
)
# Contributions of variables to PC1
fviz_contrib(res.pca, choice = "var", axes = 1, top = 10)
fviz_contrib(res.pca, choice = "var", axes = 1, top = 10)
ind <- get_pca_ind(res.pca)
fviz_pca_ind(res.pca, col.ind = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping (slow if many points)
)
fviz_pca_ind(res.pca, col.ind = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE # Avoid text overlapping (slow if many points)
)
