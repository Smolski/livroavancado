allmean = data.frame(x1=mean(mydata$x1),
x2=mean(mydata$x2),
x3=mean(mydata$x3))
allmean
step(logit, direction = 'both')
require(readr)
binary <- read_csv("http://www.karlin.mff.cuni.cz/~pesta/prednasky/NMFM404/Data/binary.csv")
binary$rank <- factor(binary$rank)
mylogit <- glm(admit ~ gre + gpa + rank, data = binary, family = binomial(link="logit"))
exp(cbind(OR = coef(mylogit), confint(mylogit)))
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) + geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=as.numeric(CHD))) + geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) + geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
chd$CHD
require(ggplot2)
chd$CHD=as.numeric(chd$CHD)
ggplot(chd, aes(x=AGE, y=CHD)) + geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
require(ggplot2)
chd$CHD=as.factor(chd$CHD)
ggplot(chd, aes(x=AGE, y=CHD)) + geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
require(ggplot2)
chd$CHD=as.double(chd$CHD)
ggplot(chd, aes(x=AGE, y=CHD)) + geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
require(ggplot2)
ggplot(as.numeric(chd), aes(x=AGE, y=CHD)) + geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
require(ggplot2)
ggplot(as.double(chd), aes(x=AGE, y=CHD)) + geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
require(ggplot2)
ggplot(as.factor(chd), aes(x=AGE, y=CHD)) + geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) + geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
summary(chd)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) + geom_point() +
binomial_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) + geom_point() +
binomial_smooth(method="glm"), se=FALSE)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) + geom_point() +
binomial_smooth(method="glm")
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) + geom_point() +
binomial_smooth()
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) +
binomial_smooth()
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) + geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=F)
require(ggplot2)
ggplot(chd, aes(x=chd$AGE, y=chd$CHD)) + geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=F)
require(ggplot2)
ggplot(chd, aes(x=chd$AGE, y=chd$CHD)) + geom_point() +
stat_smooth(method="glm", family="binomial", se=F)
require(ggplot2)
ggplot(chd, aes(x=chd$AGE, y=chd$CHD)) + geom_point() +
stat_smooth(method="glm", family="binomial", se=FALSE)
require(ggplot2)
ggplot(chd, aes(x=chd$AGE, y=chd$CHD)) + geom_point() +
stat_smooth(method="glm", family="logit", se=FALSE)
require(ggplot2)
ggplot(chd, aes(x=chd$AGE, y=chd$CHD)) + geom_point() +
stat_smooth(method="glm", family="logit", se=TRUE)
require(ggplot2)
ggplot(chd, aes(x=chd$AGE, y=chd$CHD)) + geom_point() +
stat_smooth(method="glm", binomial(link="logit"), se=TRUE)
require(ggplot2)
ggplot(chd, aes(x=chd$AGE, y=chd$CHD)) + geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=F)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) + geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=F)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
require(ggplot2)
ggplot(data=chd, aes(x=AGE, y=CHD)) + geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=F)
require(ggplot2)
ggplot(data=chd, aes(x=AGE, y=CHD)) + geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=F)
library("ggplot2", lib.loc="~/R/win-library/3.5")
install.packages("GGPLOT2")
install.packages("ggplot2")
install.packages("ggplot2")
require(ggplot2)
ggplot(data=chd, aes(x=AGE, y=CHD)) + geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=F)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) + geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=F)
require(ggplot2)
ggplot2(chd, aes(x=AGE, y=CHD)) + geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=F)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) + geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=F)
install_version("ggplot2", version = "2.3.0", repos = "http://cran.us.r-project.org")
install_pachage("ggplot2", version = "2.3.0", repos = "http://cran.us.r-project.org")
install_pachages("ggplot2", version = "2.3.0", repos = "http://cran.us.r-project.org")
install.packages("ggplot", version="2.3.0")
install.packages("ggplot2", version="2.3.0")
install.packages("ggplot2", version = "2.3.0")
library("ggplot2", lib.loc="~/R/win-library/3.5")
remove.packages("ggplot2", lib="~/R/win-library/3.5")
install.packages("ggplot2", version = "2.3.0")
install.packages("ggplot2", version = "2.3.0")
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) + geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=F)
install.packages("readr", "mfx")
install.packages(readr,mfx)
install.packages(c("readr","mfx"))
install.packages(c("readr","mfx","caret","pRoc","ResourceSelection","modEvA","foreign","stargazer"))
require(readr)
chd <- read_delim("https://goo.gl/uDAAHv",
";", escape_double = FALSE, col_types = cols(CHD = col_factor(levels = c())),
trim_ws = TRUE)
summary(chd)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=as.numeric(CHD))) + geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=F)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) +
geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=F)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) +
geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=F)
ggplot(chd, aes(x=AGE, y=as.numeric(CHD))) +
geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=F)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=as.numeric(CHD))) +
geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
predict(m1, newdata=media, type="response")
predict(m1, newdata=chd$AGE, type="response")
predict(m1, newdata=AGE, type="response")
AGE=chd$AGE
predict(m1, newdata=AGE, type="response")
IDADE=chd$AGE
predict(m1, newdata=IDADE, type="response")
View(m1)
m1
require(ggplot2)
ggplot(chd, aes(x=AGE, y=as.numeric(CHD))) +
geom_point() +
stat_smooth(method="glm", family="binomial", se=FALSE)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=as.numeric(CHD))) +
geom_point() +
stat_smooth(method=glm, method.args=list(family="binomial"), se=FALSE)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=as.numeric(CHD))) +
geom_point() +
stat_smooth(method="lm", method.args=list(family="binomial"), se=FALSE)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=as.numeric(CHD))) +
geom_point() +
stat_smooth(method="glm", method.args=list(family="logit"), se=FALSE)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=as.numeric(CHD))) +
geom_point() +
stat_smooth(method="glm", method.args=list(family = binomial(link="logit")), se=FALSE)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=as.numeric(CHD))) +
geom_point() +
stat_smooth(method="glm", method.args=list(family = "binomial"(link="logit")), se=FALSE)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=as.numeric(CHD))) +
geom_point() +
stat_smooth(method="glm", method.args=list(family = binomial(link='logit')), se=FALSE)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=as.numeric(CHD))) +
geom_point() +
stat_smooth(method='glm', method.args=list(family = binomial(link='logit')), se=FALSE)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=as.numeric(CHD))) +
geom_point() +
stat_smooth(method='glm', method.args=list(family = binomial(link='logit')))
require(ggplot2)
ggplot(chd, aes(x=AGE, y=as.numeric(CHD))) +
geom_point() +
stat_smooth(method='glm', method.args=list(family = quasibinomial(link='logit')), se=FALSE)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) +
geom_point() +
stat_smooth(method='glm', method.args=list(family = quasibinomial(link='logit')), se=FALSE)
library(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) +
geom_point() +
stat_smooth(method='glm', method.args=list(family = quasibinomial(link='logit')), se=FALSE)
research_year <- c(1, 2, 3, 4, 5, 6, 7, 8, 9)
relative_number <- c(0.1, 0.15, 0.16, 0.23, 0.30, 0.35, 0.36, 0.38, 0.42)
relative_data <-  data.frame(research_year, relative_number)
relative_data
ggplot(data = relative_data, aes(x = research_year, y = relative_number)) +
geom_smooth(method = 'glm',
method.args = list(family = quasibinomial(link = 'logit'))
)
View(relative_data)
relative_data
summary(relative_data)
relative_data
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) +
geom_point() +
stat_smooth(method='glm', method.args=list(family = binomial, se=FALSE)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) +
geom_point() +
stat_smooth(method='glm', method.args=list(family = 'binomial', se=FALSE)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) +
geom_point() +
stat_smooth(method='glm', method.args=list(family = 'binomial', se=FALSE))
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) +
geom_point() +
stat_smooth(method='glm', method.args=list(family = binomial(link='logit')), se=FALSE)
View(relative_data)
newdata = data.frame(wt = 2.1, disp = 180)
newdata
m1
predict(m1, chd$AGE, type="response")
predict(m1, chd$AGE[1], type="response")
predict(m1, chd$AGE[,1], type="response")
predict(m1, chd$AGE[1,], type="response")
chd$PRED=predict(m1, chd$AGE, type="response")
set.seed(16)
data <- data.frame(
mating=sample(0:1, 200, replace=T),
pop=sample(letters[1:4], 200, replace=T),
behv = scale(rpois(200,10)),
condition = scale(rnorm(200,5))
)
View(data)
data1<-data[1:150,]     #for model fitting
data2<-data[51:200,-1]
data1
View(data1)
View(data2)
model<-glm ( mating ~  behv * pop +
I(behv^2) * pop + condition,
data=data1,
family=binomial(logit))
predict(model, newdata=data2, type="response")
IDADE=chd$AGE
predict(m1, newdata=IDADE, type="response")
IDADE
summary(idade)
summary(IDADE)
m1
View(IDADE)
IDADE<-chd[3,]
IDADE<-chd[,3]
IDADE<-chd[,1]
predict(m1, newdata=IDADE, type="response")
plot(predict(m1, newdata=IDADE, type="response"))
plot(exp(predict(m1, newdata=IDADE, type="response")))
plot(predict(m1, newdata=IDADE, type="response"))
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) +
geom_point() +
stat_smooth(method='glm', method.args=list(family = binomial(link='logit')),...)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) +
geom_point() +
stat_smooth(method='glm', method.args=list(family = binomial(link='logit')), ...)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) +
geom_point() +
stat_smooth(method='glm', method.args=list(family = "binomial"), ...)
popbbehv<-data.frame(
pop="b",
behv=seq(from=min(data$behv), to=max(data$behv), length.out=100),
condition = mean(data$condition)
)
popbbehvpred<-predict(model, newdata=popbbehv, type="response")
plot(popbbehvpred~behv, popbbehv, type="l")
plot(predict(m1, newdata=IDADE, type="response"))
plot(predict(m1, newdata=IDADE, type="response"),type="l")
View(popbbehv)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) +
geom_point() +
stat_smooth(method='glm', method.args=list(family = "binomial"), se=TRUE)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) +
geom_point() +
stat_smooth(method='glm', method.args=list(family = "binomial"), se=TRUE)
IDADE$pred+predict(m1, newdata=IDADE, type="response")
IDADE$pred=predict(m1, newdata=IDADE, type="response")
IDADE
plot(IDADE)
IDADE<-chd[,3]
IDADE
IDADE<-chd[,1]
IDADE
require(ggplot2)
IDADE<-chd[,1]
predict(m1, newdata=IDADE, type="response")
IDADE$pred=predict(m1, newdata=IDADE, type="response")
require(ggplot2)
IDADE<-chd[,1]
#predict(m1, newdata=IDADE, type="response")
IDADE$pred=predict(m1, newdata=IDADE, type="response")
plot(IDADE)
ggplot(IDADE)
ggplot(IDADE, aes(x=AGE, y=pred)) +
geom_point()
IDADE<-chd$AGE
IDADE
View(IDADE)
media$pred.prob = predict(m1, newdata=50, type="response")
media$pred.prob = predict(m1, newdata="50", type="response")
media$pred.prob = predict(m1, newdata=c(50), type="response")
media$pred.prob = predict(m1, newdata=as.numeric(50), type="response")
media$pred.prob = predict(m1, newdata=as.numeric("50"), type="response")
predict(m1, newdata=as.numeric("50"), type="response")
predict(m1, newdata=as.numeric(50), type="response")
predict(m1, newdata=50, type="response")
predict(m1, newdata="50", type="response")
predict(m1, newdata=as.numeric(50), type="response")
predict(m1, newdata=as.numeric("50"), type="response")
predict(m1, newdata=as.numeric(c("50")), type="response")
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) +
geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) +
geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) +
geom_point() +
stat_smooth(method="glm", family="binomial", se=FALSE)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) +
geom_point() +
stat_smooth(method="glm", family=binomial(link="logit"), se=FALSE)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) +
geom_point() +
stat_smooth(method="glm", family=binomial(link="logit"), se=F)
plot(plot.roc(chd$CHD,fitted(m1)),
print.auc=TRUE,
auc.polygon=TRUE,
grud=c(0.1,0.2),
grid.col=c("green","red"),
max.auc.polygon=TRUE,
auc.polygon.col="lightgreen",
print.thres=TRUE)
require(pROC)
roc1=plot.roc(chd$CHD,fitted(m1))
require(pROC)
roc1=plot.roc(chd$CHD,fitted(m1))
plot(roc1,
print.auc=TRUE,
auc.polygon=TRUE,
grud=c(0.1,0.2),
grid.col=c("green","red"),
max.auc.polygon=TRUE,
auc.polygon.col="lightgreen",
print.thres=TRUE)
#Filtrando a idade dos indivíduos
IDADE<-chd[,1]
#Filtrando a idade dos indivíduos
IDADE<-chd[,1]
packages <- c("caret", "pROC", "ResourceSelection", "modEvA", "foreign", "stargazer", "mfx","readr","ggplot2")
if (length(setdiff(packages, rownames(installed.packages()))) > 0) {
install.packages(setdiff(packages, rownames(installed.packages())))
}
require(readr)
chd <- read_delim("https://goo.gl/uDAAHv",
";", escape_double = FALSE, col_types = cols(CHD = col_factor(levels = c())),
trim_ws = TRUE)
summary(chd)
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) +
geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
m1=glm(CHD~AGE, family = binomial(link="logit"), data = chd)
summary(m1)
#Filtrando a idade dos indivíduos
IDADE<-chd[,1]
#Criando campo de predição para cada idade dos indivíduos
IDADE$PRED=predict(m1, newdata=IDADE, type="response")
#Plotando a probabilidade predita pelo modelo
require(ggplot2)
ggplot(IDADE, aes(x=AGE, y=PRED)) +
geom_point()
require(mfx)
logitor(CHD~AGE,data = chd)
exp(cbind(OR=coef(m1), confint(m1)))
media = data.frame(AGE=mean(chd$AGE))
media
media$pred.prob = predict(m1, newdata=media, type="response")
media
require(caret)
pdata <- as.factor(
ifelse(
predict(m1, newdata = chd, type = "response")
>0.5,"1","0"))
confusionMatrix(pdata, chd$CHD, positive="1")
require(pROC)
roc1=plot.roc(chd$CHD,fitted(m1))
plot(roc1,
print.auc=TRUE,
auc.polygon=TRUE,
grud=c(0.1,0.2),
grid.col=c("green","red"),
max.auc.polygon=TRUE,
auc.polygon.col="lightgreen",
print.thres=TRUE)
require(ResourceSelection)
hl=hoslem.test(chd$CHD,fitted(m1),g=10)
hl
require(modEvA)
RsqGLM(m1)
require(foreign)
mydata <- read.dta("http://dss.princeton.edu/training/Panel101.dta")
summary(mydata)
logit=glm(y_bin~x1+x2+x3, data=mydata, family = binomial(link="logit"))
summary(logit)
require(stargazer)
stargazer(logit, title="Resultados",type = "text")
require(mfx)
logitor(y_bin~x1+x2+x3,data=mydata)
exp(coef(logit))
exp(cbind(OR=coef(logit), confint(logit)))
allmean = data.frame(x1=mean(mydata$x1),
x2=mean(mydata$x2),
x3=mean(mydata$x3))
allmean
allmean$pred.prob = predict(logit, newdata=allmean, type="response")
allmean
step(logit, direction = 'both')
require(readr)
binary <- read_csv("http://www.karlin.mff.cuni.cz/~pesta/prednasky/NMFM404/Data/binary.csv")
binary$rank <- factor(binary$rank)
mylogit <- glm(admit ~ gre + gpa + rank, data = binary, family = binomial(link="logit"))
exp(cbind(OR = coef(mylogit), confint(mylogit)))
IDADE$CHD=chd$chd
View(IDADE)
#Filtrando a idade dos indivíduos
IDADE<-chd[,1]
#Criando campo de predição para cada idade dos indivíduos
IDADE$PRED=predict(m1, newdata=IDADE, type="response")
#Plotando a probabilidade predita pelo modelo
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) +
geom_point()+
ggplot(IDADE, aes(x=AGE, y=PRED)) +
geom_point()
#Filtrando a idade dos indivíduos
IDADE<-chd[,1]
#Criando campo de predição para cada idade dos indivíduos
IDADE$PRED=predict(m1, newdata=IDADE, type="response")
#Plotando a probabilidade predita pelo modelo
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) +
geom_point()
ggplot(IDADE, aes(x=AGE, y=PRED)) +
geom_point()
#Filtrando a idade dos indivíduos
IDADE<-chd[,1]
#Criando campo de predição para cada idade dos indivíduos
IDADE$PRED=predict(m1, newdata=IDADE, type="response")
#Plotando a probabilidade predita pelo modelo
require(ggplot2)
ggplot(chd, aes(x=AGE, y=as.numeric(CHD))) +
geom_point()+
ggplot(IDADE, aes(x=AGE, y=PRED)) +
geom_point()
require(ggplot2)
ggplot(chd, aes(x=AGE, y=CHD)) +
geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
# Filtrando a idade dos indivíduos
IDADE<-chd[,1]
# Criando campo de predição para cada idade dos indivíduos
IDADE$PRED=predict(m1, newdata=IDADE, type="response")
# Plotando a probabilidade predita pelo modelo
require(ggplot2)
ggplot(IDADE, aes(x=AGE, y=PRED)) +
geom_point()
require(caret)
pdata <- as.factor(
ifelse(
predict(m1, newdata = chd, type = "response")
>0.5,"1","0"))
confusionMatrix(pdata, chd$CHD, positive="1")
